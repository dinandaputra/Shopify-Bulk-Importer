[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "shopify-bulk-importer"
version = "1.0.0"
description = "Streamlit web app for MyByte International staff to efficiently input used electronics data and create products directly in Shopify"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "MyByte International", email = "tech@mybyte.com"},
]
keywords = ["shopify", "product-import", "e-commerce", "streamlit"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "python-dateutil>=2.8.0",
    "shopifyapi>=12.0.0",
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.0.0",
    "pytest-html>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "isort>=5.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "responses>=0.23.0",
    "factory-boy>=3.2.0",
    "freezegun>=1.2.0",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/mybyte-international/shopify-bulk-importer"
Repository = "https://github.com/mybyte-international/shopify-bulk-importer"
Documentation = "https://shopify-bulk-importer.readthedocs.io"
Issues = "https://github.com/mybyte-international/shopify-bulk-importer/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["models*", "services*", "config*", "pages*", "domain*", "infrastructure*", "repositories*"]
exclude = ["tests*", "docs*", "scripts*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
no_strict_optional = true
show_error_codes = true

# pytest configuration  
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --tb=short"
testpaths = ["tests"]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, with external dependencies)",
    "e2e: marks tests as end-to-end tests (slowest, full system)",
    "api: marks tests that interact with Shopify API",
    "slow: marks tests as slow (skipped by default)",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::pydantic.warnings.PydanticDeprecatedSince20",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "*/venv/*",
    ".venv/*",
    "*/.venv/*",
    "setup.py",
    "conftest.py",
    "*/migrations/*",
    "*/test_*",
    "*test.py",
    "__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit security checks configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used and shell injection for test files

# flake8 configuration (setup.cfg style in pyproject.toml not supported)
# See .flake8 file for configuration